services:
  # ProtonVPN tunnel
  protonvpn:
    image: genericmale/protonvpn
    restart: unless-stopped
    environment:
      - OPENVPN_USER_PASS_FILE=/run/secrets/protonvpn
      - VPN_RECONNECT=2:00
      - VPN_SERVER_COUNT=10
    devices:
      - /dev/net/tun
    cap_add:
      - NET_ADMIN
    secrets:
      - protonvpn
    volumes:
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "https://protonvpn.com"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Final out-proxy through ProtonVPN
  privoxy_out:
    image: vimagick/privoxy
    restart: unless-stopped
    network_mode: service:protonvpn
    depends_on:
      protonvpn:
        condition: service_healthy

  # Replicated Tor nodes
  tor:
    image: dperson/torproxy:armhf
    deploy:
      mode: replicated
      replicas: 3
    networks:
      - proxy_net
    environment:
      - SOCKS_PORT=9100
      - CONTROL_PORT=9200
    volumes:
      - tor-data:/var/lib/tor
      - ./torrc.template:/etc/tor/torrc:ro

  # Replicated Privoxy for Tor â†’ Privoxy routing
  privoxy:
    image: lusky3/privoxy:latest
    deploy:
      mode: replicated
      replicas: 3
    networks:
      - proxy_net
    depends_on:
      - tor
    volumes:
      - ./privoxy/config:/etc/privoxy/config

  # NGINX for load balancing the replicated Privoxy
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "8888:8888"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - privoxy
    networks:
      - proxy_net

secrets:
  protonvpn:
    file: ./secrets/protonvpn

volumes:
  tor-data:

networks:
  proxy_net:
    driver: bridge
